import React from 'react';
import Head from 'next/head';
import { GetServerSideProps } from 'next';
import dynamic from 'next/dynamic';
import {
  QueryClient,
  QueryClientProvider,
  useQuery,
} from '@tanstack/react-query';
import { getTodos } from '../utils/api';
import styles from '../styles/Home.module.css';

const Table = dynamic(() => import('../components/Table/Table'), {
  ssr: false,
});
const AddTodo = dynamic(() => import('../components/AddTodo/AddTodo'), {
  ssr: false,
});

interface TodoItem {
  id: number;
  item: string;
}

interface Props {
  status: string;
  todos: TodoItem[];
  username: string;
}

const queryClient = new QueryClient();

export const getServerSideProps: GetServerSideProps<Props> = async () => {
  const { status } = await fetch('http://localhost:8000/status').then((x) =>
    x.json()
  );
  const { username } = await fetch('http://localhost:8000/username').then((x) =>
    x.json()
  );
  const todos = await fetch('http://localhost:8000/todos').then((x) =>
    x.json()
  );
  return {
    props: {
      status: status,
      todos: todos,
      username: username,
    },
  };
};

interface HomeProps {
  handleGetTodos: () => Promise<TodoItem[]>;
  todos: TodoItem[];
}

function Home({ todos }: HomeProps): JSX.Element {
  const {
    isLoading,
    isError,
    data = [],
    error,
  } = useQuery({
    queryKey: ['todos'],
    queryFn: getTodos,
    intialData: todos,
    staleTime: 10000,
  });
  let mainContent = <Table todos={data} handleGetTodos={getTodos} />;
  if (isLoading) {
    mainContent = <span>Loading...</span>;
  }

  if (isError) {
    mainContent = <span>Error: {error.message}</span>;
  }
  console.log(data);
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <link rel='icon' href='/favicon.ico' />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Welcome to <a href='https://nextjs.org'>Next.js!</a>
        </h1>
        <AddTodo handleGetTodos={getTodos} />
        {mainContent}
      </main>
    </div>
  );
}

export default function HomeWrapper({
  status,
  todos,
  username,
}: Props): JSX.Element {
  console.log('test');
  return (
    <QueryClientProvider client={queryClient}>
      <div className={styles.container}>
        <Home todos={todos} />
        <div>
          Status is: {status}, your username is: {username}
        </div>
      </div>
    </QueryClientProvider>
  );
}
